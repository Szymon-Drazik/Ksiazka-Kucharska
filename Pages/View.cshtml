@page
@model WebApplicationGr3.Pages.ViewModel
@{
    ViewData["Title"] = "Książka kucharska";
}

<div style="max-width: 900px; margin: auto; padding: 20px;">
    <div style="display: flex; justify-content: space-between; align-items: center; max-width: 1200px;">
        <h2 style="font-size: 28px; font-weight: bold;">📖 Moja Książka Kucharska</h2>
        <a asp-page="/Create" class="btn btn-primary">➕ Dodaj przepis</a>
        <a asp-page="/viewall" class="btn btn-primary">📖 Przeglądaj wszystkie</a>
    </div>

    <div style="margin: 20px 0;">
        <input type="text" id="searchInput" placeholder="Wyszukaj przepis..." style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 5px;" oninput="filterRecipes()">
    </div>

    <hr style="margin: 20px 0;" />

    @if (Model.RecipeList != null && Model.RecipeList.Any())
    {
        <div id="recipeBook" style="position: relative; overflow: hidden; width: 100%; height: 400px; perspective: 1000px;">
            @foreach (var recipe in Model.RecipeList)
            {
                <div class="recipe-page" style="position: absolute; width: 100%; height: 100%; transition: transform 0.6s ease-in-out; transform-style: preserve-3d; backface-visibility: hidden; transform-origin: c;">
                    <div style="padding: 20px; background-color: #fff; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
                        <h3 style="font-size: 24px; font-weight: bold;">@recipe.Name</h3>
                        <p><strong>Kategoria:</strong> @recipe.Category</p>
                        <p><strong>Składniki:</strong> @recipe.Ingridient</p>
                        <p><strong>Opis:</strong> @recipe.ShortDescription</p>
                        <div style="margin-top: 15px; display: flex; justify-content: space-between;">
                            <a asp-page="/Read" asp-route-id="@recipe.Id" class="btn btn-success">Otwórz</a>
                            <a asp-page="/Update" asp-route-id="@recipe.Id" class="btn btn-warning">Edytuj</a>
                            <form method="post" asp-page-handler="Delete" asp-route-id="@recipe.Id" style="display:inline;">
                                <button type="submit" class="btn btn-danger">Usuń</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div style="margin-top: 20px; display: flex; justify-content: space-between;">
            <button type="button" class="btn btn-secondary" onclick="navigateRecipes(-1)">Poprzedni</button>
            <button type="button" class="btn btn-secondary" onclick="navigateRecipes(1)">Następny</button>
        </div>


    }
    else
    {
        <p style="color: gray;">Brak przepisów do wyświetlenia.</p>
    }
</div>
@section Scripts {
    <script>
        let currentPage = 0;
        const pages = document.querySelectorAll('.recipe-page');

        function showPage(index) {
             pages.forEach((page, i) => {
        if (i === index) {
            page.style.transform = 'rotateY(0deg)';
            page.style.zIndex = 1;
            page.style.boxShadow = '0 4px 15px rgba(0,0,0,0.3)';
        } else {
            page.style.transform = 'rotateY(-180deg)';
            page.style.zIndex = 0;
            page.style.boxShadow = 'none';
        }
            });
        }

        function navigateRecipes(direction) {
            currentPage = (currentPage + direction + pages.length) % pages.length;
            showPage(currentPage);
        }

        function filterRecipes() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            pages.forEach((page) => {
                const recipeName = page.querySelector('h3').innerText.toLowerCase();
                page.style.display = recipeName.includes(searchTerm) ? 'block' : 'none';
            });
            // Reset current page view to the first visible one
            const firstVisiblePage = Array.from(pages).findIndex(page => page.style.display === 'block');
            if (firstVisiblePage !== -1) {
                currentPage = firstVisiblePage;
                showPage(currentPage);
            }
        }

    </script>
    }
